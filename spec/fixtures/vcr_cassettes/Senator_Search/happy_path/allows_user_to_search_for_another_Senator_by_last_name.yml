---
http_interactions:
- request:
    method: get
    uri: https://api.propublica.org/congress/v1/118/senate/members.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Api-Key:
      - "<PROPUBLICA_SECRET_KEY"
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '208558'
      Connection:
      - keep-alive
      Date:
      - Mon, 10 Jul 2023 01:26:13 GMT
      X-Amzn-Requestid:
      - a01d9642-a2a8-4857-9cff-c219094c316b
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token
      X-Amz-Apigw-Id:
      - H0uoaFTMoAMFedA=
      Access-Control-Allow-Methods:
      - GET,OPTIONS
      X-Amzn-Trace-Id:
      - Root=1-64ab5e35-4ecb626c0d25413b6174208f;Sampled=0;lineage=5b3f852f:0
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 d09fd0ac0a8733df98f134da74eec098.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      X-Amz-Cf-Id:
      - 1_QIfZeOHpd8CSegGI47onoS1xmrhm1i8Z0pvkU4q36iHMQKnQ8ZoQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
   "status":"OK",
   "copyright":" Copyright (c) 2023 Pro Publica Inc. All Rights Reserved.",
   "results":[
      {
         "congress": "118",
         "chamber": "Senate",
         
         
         "num_results": 101,
         "offset": 0,
         "members": [
              {
                 "id": "B001230",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001230.json",
                 "first_name": "Tammy",
                 "middle_name": null,
                 "last_name": "Baldwin",
                 "suffix": null,
                 "date_of_birth": "1962-02-11",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": "Senate Democratic Caucus Secretary",
                 "twitter_account": "SenatorBaldwin",
                 "facebook_account": "senatortammybaldwin",
                 "youtube_account": "witammybaldwin",
                 "govtrack_id": "400013",
                 "cspan_id": "57884",
                 "votesmart_id": "3470",
                 "icpsr_id": "29940",
                 "crp_id": "N00004367",
                 "google_entity_id": "/m/024v02",
                 "fec_candidate_id": "H8WI00018",
                 "url": "https://www.baldwin.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.baldwin.senate.gov/feedback",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:wi",
                 "office": "709 Hart Senate Office Building",
                 "phone": "202-224-5653",
                 "fax": null,
                 "state": "WI",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S354"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "B001261",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001261.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Barrasso",
                 "suffix": null,
                 "date_of_birth": "1952-07-21",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "Senate Republican Conference Chair",
                 "twitter_account": "SenJohnBarrasso",
                 "facebook_account": "johnbarrasso",
                 "youtube_account": "barrassowyo",
                 "govtrack_id": "412251",
                 "cspan_id": "1024777",
                 "votesmart_id": "52662",
                 "icpsr_id": "40707",
                 "crp_id": "N00006236",
                 "google_entity_id": "/m/02rsm32",
                 "fec_candidate_id": "S6WY00068",
                 "url": "https://www.barrasso.senate.gov",
                 "rss_url": "https://www.barrasso.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.barrasso.senate.gov/public/index.cfm/contact-form",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 36,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:wy",
                 "office": "307 Dirksen Senate Office Building",
                 "phone": "202-224-6441",
                 "fax": null,
                 "state": "WY",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S317"
                 ,"missed_votes_pct": 21.82,
                 "votes_with_party_pct": 99.22,
                 "votes_against_party_pct": 0.78
               },
                           {
                 "id": "B001267",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001267.json",
                 "first_name": "Michael",
                 "middle_name": null,
                 "last_name": "Bennet",
                 "suffix": null,
                 "date_of_birth": "1964-11-28",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenBennetCo",
                 "facebook_account": "senbennetco",
                 "youtube_account": "SenatorBennet",
                 "govtrack_id": "412330",
                 "cspan_id": "1031622",
                 "votesmart_id": "110942",
                 "icpsr_id": "40910",
                 "crp_id": "N00030608",
                 "google_entity_id": "/m/05b60qf",
                 "fec_candidate_id": "S0CO00211",
                 "url": "https://www.bennet.senate.gov/public",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:co",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "CO",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S330"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 98.76,
                 "votes_against_party_pct": 1.24
               },
                           {
                 "id": "B001243",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001243.json",
                 "first_name": "Marsha",
                 "middle_name": null,
                 "last_name": "Blackburn",
                 "suffix": null,
                 "date_of_birth": "1952-06-06",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "MarshaBlackburn",
                 "facebook_account": "marshablackburn",
                 "youtube_account": "RepMarshaBlackburn",
                 "govtrack_id": "400032",
                 "cspan_id": "31226",
                 "votesmart_id": "25186",
                 "icpsr_id": "20351",
                 "crp_id": "N00003105",
                 "google_entity_id": "/m/01fnkt",
                 "fec_candidate_id": "H2TN06030",
                 "url": "https://www.blackburn.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.blackburn.senate.gov/email-me",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "5",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:tn",
                 "office": "357 Dirksen Senate Office Building",
                 "phone": "202-224-3344",
                 "fax": null,
                 "state": "TN",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S396"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 97.48,
                 "votes_against_party_pct": 2.52
               },
                           {
                 "id": "B001277",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001277.json",
                 "first_name": "Richard",
                 "middle_name": null,
                 "last_name": "Blumenthal",
                 "suffix": null,
                 "date_of_birth": "1946-02-13",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenBlumenthal",
                 "facebook_account": "SenBlumenthal",
                 "youtube_account": "SenatorBlumenthal",
                 "govtrack_id": "412490",
                 "cspan_id": "21799",
                 "votesmart_id": "1568",
                 "icpsr_id": "41101",
                 "crp_id": "N00031685",
                 "google_entity_id": "/m/03tg8m",
                 "fec_candidate_id": "S0CT00177",
                 "url": "https://www.blumenthal.senate.gov",
                 "rss_url": "https://www.blumenthal.senate.gov/rss/feeds/?type=press",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ct",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "CT",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S341"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "B001288",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001288.json",
                 "first_name": "Cory",
                 "middle_name": null,
                 "last_name": "Booker",
                 "suffix": null,
                 "date_of_birth": "1969-04-27",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenBooker",
                 "facebook_account": null,
                 "youtube_account": "SenCoryBooker",
                 "govtrack_id": "412598",
                 "cspan_id": "84679",
                 "votesmart_id": "76151",
                 "icpsr_id": "41308",
                 "crp_id": "N00035267",
                 "google_entity_id": "/m/06p430",
                 "fec_candidate_id": "S4NJ00185",
                 "url": "https://www.booker.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.booker.senate.gov/?p=contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 9,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nj",
                 "office": "717 Hart Senate Office Building",
                 "phone": "202-224-3224",
                 "fax": null,
                 "state": "NJ",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S370"
                 ,"missed_votes_pct": 5.45,
                 "votes_with_party_pct": 99.35,
                 "votes_against_party_pct": 0.65
               },
                           {
                 "id": "B001236",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001236.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Boozman",
                 "suffix": null,
                 "date_of_birth": "1950-12-10",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "JohnBoozman",
                 "facebook_account": "JohnBoozman",
                 "youtube_account": "BoozmanPressOffice",
                 "govtrack_id": "400040",
                 "cspan_id": "92069",
                 "votesmart_id": "27958",
                 "icpsr_id": "20101",
                 "crp_id": "N00013873",
                 "google_entity_id": "/m/024s3v",
                 "fec_candidate_id": "H2AR03176",
                 "url": "https://www.boozman.senate.gov/public",
                 "rss_url": "https://www.boozman.senate.gov/public/?a=RSS.Feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ar",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "AR",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S343"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 93.25,
                 "votes_against_party_pct": 6.75
               },
                           {
                 "id": "B001310",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001310.json",
                 "first_name": "Mike",
                 "middle_name": null,
                 "last_name": "Braun",
                 "suffix": null,
                 "date_of_birth": "1954-03-24",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "",
                 "twitter_account": "SenatorBraun",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "412839",
                 "cspan_id": null,
                 "votesmart_id": "148564",
                 "icpsr_id": null,
                 "crp_id": "N00041731",
                 "google_entity_id": "/g/11f2ckdwty",
                 "fec_candidate_id": "S8IN00171",
                 "url": "https://www.braun.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.braun.senate.gov/contact-mike",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:in",
                 "office": "404 Russell Senate Office Building",
                 "phone": "202-224-4814",
                 "fax": null,
                 "state": "IN",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S397"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 91.88,
                 "votes_against_party_pct": 8.13
               },
                           {
                 "id": "B001319",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001319.json",
                 "first_name": "Katie",
                 "middle_name": null,
                 "last_name": "Britt",
                 "suffix": null,
                 "date_of_birth": "1982-02-02",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456874",
                 "cspan_id": null,
                 "votesmart_id": null,
                 "icpsr_id": null,
                 "crp_id": null,
                 "google_entity_id": null,
                 "fec_candidate_id": "S2AL00145",
                 "url": "https://www.britt.senate.gov/",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:al",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "AL",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S416"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 98.15,
                 "votes_against_party_pct": 1.85
               },
                           {
                 "id": "B000944",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B000944.json",
                 "first_name": "Sherrod",
                 "middle_name": null,
                 "last_name": "Brown",
                 "suffix": null,
                 "date_of_birth": "1952-11-09",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenSherrodBrown",
                 "facebook_account": "SenatorSherrodBrown",
                 "youtube_account": "SherrodBrownOhio",
                 "govtrack_id": "400050",
                 "cspan_id": "5051",
                 "votesmart_id": "27018",
                 "icpsr_id": "29389",
                 "crp_id": "N00003535",
                 "google_entity_id": "/m/034s80",
                 "fec_candidate_id": "H2OH13033",
                 "url": "https://www.brown.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.brown.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:oh",
                 "office": "503 Hart Senate Office Building",
                 "phone": "202-224-2315",
                 "fax": null,
                 "state": "OH",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S307"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 97.50,
                 "votes_against_party_pct": 2.50
               },
                           {
                 "id": "B001305",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/B001305.json",
                 "first_name": "Ted",
                 "middle_name": null,
                 "last_name": "Budd",
                 "suffix": null,
                 "date_of_birth": "1971-10-21",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "RepTedBudd",
                 "facebook_account": "RepTedBudd",
                 "youtube_account": null,
                 "govtrack_id": "412712",
                 "cspan_id": "103513",
                 "votesmart_id": "171489",
                 "icpsr_id": "21708",
                 "crp_id": "N00039551",
                 "google_entity_id": "/g/11c2nmnsj0",
                 "fec_candidate_id": "H6NC13129",
                 "url": "",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 6,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:nc",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "NC",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S417"
                 ,"missed_votes_pct": 3.64,
                 "votes_with_party_pct": 92.99,
                 "votes_against_party_pct": 7.01
               },
                           {
                 "id": "C000127",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C000127.json",
                 "first_name": "Maria",
                 "middle_name": null,
                 "last_name": "Cantwell",
                 "suffix": null,
                 "date_of_birth": "1958-10-13",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorCantwell",
                 "facebook_account": "senatorcantwell",
                 "youtube_account": "SenatorCantwell",
                 "govtrack_id": "300018",
                 "cspan_id": "26137",
                 "votesmart_id": "27122",
                 "icpsr_id": "39310",
                 "crp_id": "N00007836",
                 "google_entity_id": "/m/01x68t",
                 "fec_candidate_id": "S8WA00194",
                 "url": "https://www.cantwell.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cantwell.senate.gov/public/index.cfm/email-maria",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "23",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:wa",
                 "office": "511 Hart Senate Office Building",
                 "phone": "202-224-3441",
                 "fax": null,
                 "state": "WA",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S275"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "C001047",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001047.json",
                 "first_name": "Shelley",
                 "middle_name": "Moore",
                 "last_name": "Capito",
                 "suffix": null,
                 "date_of_birth": "1953-11-26",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenCapito",
                 "facebook_account": "senshelley",
                 "youtube_account": null,
                 "govtrack_id": "400061",
                 "cspan_id": "83737",
                 "votesmart_id": "11701",
                 "icpsr_id": "20146",
                 "crp_id": "N00009771",
                 "google_entity_id": "/m/024pwq",
                 "fec_candidate_id": "H0WV02138",
                 "url": "https://www.capito.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.capito.senate.gov/contact/contact-shelley",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:wv",
                 "office": "172 Russell Senate Office Building",
                 "phone": "202-224-6472",
                 "fax": null,
                 "state": "WV",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S372"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 81.60,
                 "votes_against_party_pct": 18.40
               },
                           {
                 "id": "C000141",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C000141.json",
                 "first_name": "Benjamin",
                 "middle_name": "L.",
                 "last_name": "Cardin",
                 "suffix": null,
                 "date_of_birth": "1943-10-05",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorCardin",
                 "facebook_account": "senatorbencardin",
                 "youtube_account": "senatorcardin",
                 "govtrack_id": "400064",
                 "cspan_id": "4004",
                 "votesmart_id": "26888",
                 "icpsr_id": "15408",
                 "crp_id": "N00001955",
                 "google_entity_id": "/m/025k3k",
                 "fec_candidate_id": "H6MD03177",
                 "url": "https://www.cardin.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cardin.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:md",
                 "office": "509 Hart Senate Office Building",
                 "phone": "202-224-4524",
                 "fax": null,
                 "state": "MD",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S308"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 98.13,
                 "votes_against_party_pct": 1.88
               },
                           {
                 "id": "C000174",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C000174.json",
                 "first_name": "Thomas",
                 "middle_name": "R.",
                 "last_name": "Carper",
                 "suffix": null,
                 "date_of_birth": "1947-01-23",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": "",
                 "twitter_account": "SenatorCarper",
                 "facebook_account": "tomcarper",
                 "youtube_account": "senatorcarper",
                 "govtrack_id": "300019",
                 "cspan_id": "663",
                 "votesmart_id": "22421",
                 "icpsr_id": "15015",
                 "crp_id": "N00012508",
                 "google_entity_id": "/m/01xw7t",
                 "fec_candidate_id": "S8DE00079",
                 "url": "https://www.carper.senate.gov",
                 "rss_url": "https://www.carper.senate.gov/public/?a=RSS.Feed",
                 "contact_form": "https://www.carper.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "23",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:de",
                 "office": "513 Hart Senate Office Building",
                 "phone": "202-224-2441",
                 "fax": null,
                 "state": "DE",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S277"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 99.38,
                 "votes_against_party_pct": 0.62
               },
                           {
                 "id": "C001070",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001070.json",
                 "first_name": "Bob",
                 "middle_name": null,
                 "last_name": "Casey",
                 "suffix": null,
                 "date_of_birth": "1960-04-13",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenBobCasey",
                 "facebook_account": "SenatorBobCasey",
                 "youtube_account": "SenatorBobCasey",
                 "govtrack_id": "412246",
                 "cspan_id": "47036",
                 "votesmart_id": "2541",
                 "icpsr_id": "40703",
                 "crp_id": "N00027503",
                 "google_entity_id": "/m/047ymw",
                 "fec_candidate_id": "S6PA00217",
                 "url": "https://www.casey.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.casey.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 14,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:pa",
                 "office": "393 Russell Senate Office Building",
                 "phone": "202-224-6324",
                 "fax": null,
                 "state": "PA",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S309"
                 ,"missed_votes_pct": 8.48,
                 "votes_with_party_pct": 98.67,
                 "votes_against_party_pct": 1.33
               },
                           {
                 "id": "C001075",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001075.json",
                 "first_name": "Bill",
                 "middle_name": null,
                 "last_name": "Cassidy",
                 "suffix": null,
                 "date_of_birth": "1957-09-28",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": "SenatorBillCassidy",
                 "govtrack_id": "412269",
                 "cspan_id": "1030546",
                 "votesmart_id": "69494",
                 "icpsr_id": "20919",
                 "crp_id": "N00030245",
                 "google_entity_id": "/m/0286t7r",
                 "fec_candidate_id": "H8LA00017",
                 "url": "https://www.cassidy.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cassidy.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:la",
                 "office": "520 Hart Senate Office Building",
                 "phone": "202-224-5824",
                 "fax": null,
                 "state": "LA",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S373"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 86.50,
                 "votes_against_party_pct": 13.50
               },
                           {
                 "id": "C001035",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001035.json",
                 "first_name": "Susan",
                 "middle_name": null,
                 "last_name": "Collins",
                 "suffix": null,
                 "date_of_birth": "1952-12-07",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorCollins",
                 "facebook_account": "susancollins",
                 "youtube_account": "SenatorSusanCollins",
                 "govtrack_id": "300025",
                 "cspan_id": "45738",
                 "votesmart_id": "379",
                 "icpsr_id": "49703",
                 "crp_id": "N00000491",
                 "google_entity_id": "/m/020y8m",
                 "fec_candidate_id": "S6ME00159",
                 "url": "https://www.collins.senate.gov",
                 "rss_url": "https://www.collins.senate.gov/?q=rss.xml",
                 "contact_form": "https://www.collins.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "27",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:me",
                 "office": "413 Dirksen Senate Office Building",
                 "phone": "202-224-2523",
                 "fax": null,
                 "state": "ME",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S252"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 31.29,
                 "votes_against_party_pct": 68.71
               },
                           {
                 "id": "C001088",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001088.json",
                 "first_name": "Christopher",
                 "middle_name": "A.",
                 "last_name": "Coons",
                 "suffix": null,
                 "date_of_birth": "1963-09-09",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "ChrisCoons",
                 "facebook_account": "senatorchriscoons",
                 "youtube_account": "senatorchriscoons",
                 "govtrack_id": "412390",
                 "cspan_id": "9269028",
                 "votesmart_id": "122834",
                 "icpsr_id": "40916",
                 "crp_id": "N00031820",
                 "google_entity_id": "/m/082d3d",
                 "fec_candidate_id": "S0DE00092",
                 "url": "https://www.coons.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.coons.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 16,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:de",
                 "office": "218 Russell Senate Office Building",
                 "phone": "202-224-5042",
                 "fax": null,
                 "state": "DE",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S337"
                 ,"missed_votes_pct": 9.70,
                 "votes_with_party_pct": 99.33,
                 "votes_against_party_pct": 0.67
               },
                           {
                 "id": "C001056",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001056.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Cornyn",
                 "suffix": null,
                 "date_of_birth": "1952-02-02",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "Senate Majority Whip",
                 "twitter_account": "JohnCornyn",
                 "facebook_account": "sen.johncornyn",
                 "youtube_account": "senjohncornyn",
                 "govtrack_id": "300027",
                 "cspan_id": "93131",
                 "votesmart_id": "15375",
                 "icpsr_id": "40305",
                 "crp_id": "N00024852",
                 "google_entity_id": "/m/01xcqs",
                 "fec_candidate_id": "S2TX00106",
                 "url": "https://www.cornyn.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cornyn.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "21",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:tx",
                 "office": "517 Hart Senate Office Building",
                 "phone": "202-224-2934",
                 "fax": null,
                 "state": "TX",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S287"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 86.50,
                 "votes_against_party_pct": 13.50
               },
                           {
                 "id": "C001113",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001113.json",
                 "first_name": "Catherine",
                 "middle_name": null,
                 "last_name": "Cortez Masto",
                 "suffix": null,
                 "date_of_birth": "1964-03-29",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "sencortezmasto",
                 "facebook_account": "SenatorCortezMasto",
                 "youtube_account": null,
                 "govtrack_id": "412681",
                 "cspan_id": "105698",
                 "votesmart_id": "69579",
                 "icpsr_id": "41700",
                 "crp_id": "N00037161",
                 "google_entity_id": "/m/02rtp9t",
                 "fec_candidate_id": "S6NV00200",
                 "url": "https://www.cortezmasto.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nv",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "NV",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S385"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 98.77,
                 "votes_against_party_pct": 1.23
               },
                           {
                 "id": "C001095",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001095.json",
                 "first_name": "Tom",
                 "middle_name": null,
                 "last_name": "Cotton",
                 "suffix": null,
                 "date_of_birth": "1977-05-13",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenTomCotton",
                 "facebook_account": "SenatorTomCotton",
                 "youtube_account": "RepTomCotton",
                 "govtrack_id": "412508",
                 "cspan_id": "63928",
                 "votesmart_id": "135651",
                 "icpsr_id": "21301",
                 "crp_id": "N00033363",
                 "google_entity_id": "/m/02g3ds",
                 "fec_candidate_id": "H2AR04083",
                 "url": "https://www.cotton.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cotton.senate.gov/contact/contact-tom",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ar",
                 "office": "326 Russell Senate Office Building",
                 "phone": "202-224-2353",
                 "fax": null,
                 "state": "AR",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S374"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 97.47,
                 "votes_against_party_pct": 2.53
               },
                           {
                 "id": "C001096",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001096.json",
                 "first_name": "Kevin",
                 "middle_name": null,
                 "last_name": "Cramer",
                 "suffix": null,
                 "date_of_birth": "1961-01-21",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenKevinCramer",
                 "facebook_account": "CongressmanKevinCramer",
                 "youtube_account": "kevincramer",
                 "govtrack_id": "412555",
                 "cspan_id": "7600",
                 "votesmart_id": "444",
                 "icpsr_id": "21350",
                 "crp_id": "N00004614",
                 "google_entity_id": "/m/02rhrnw",
                 "fec_candidate_id": "H0ND01026",
                 "url": "https://www.cramer.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cramer.senate.gov/contact/contact-kevin",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "5",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 10,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nd",
                 "office": "330 Hart Senate Office Building",
                 "phone": "202-224-2043",
                 "fax": null,
                 "state": "ND",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S398"
                 ,"missed_votes_pct": 6.06,
                 "votes_with_party_pct": 90.85,
                 "votes_against_party_pct": 9.15
               },
                           {
                 "id": "C000880",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C000880.json",
                 "first_name": "Michael",
                 "middle_name": "D.",
                 "last_name": "Crapo",
                 "suffix": null,
                 "date_of_birth": "1951-05-20",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "MikeCrapo",
                 "facebook_account": "mikecrapo",
                 "youtube_account": "senatorcrapo",
                 "govtrack_id": "300030",
                 "cspan_id": "26440",
                 "votesmart_id": "26830",
                 "icpsr_id": "29345",
                 "crp_id": "N00006267",
                 "google_entity_id": "/m/021pgp",
                 "fec_candidate_id": "S8ID00027",
                 "url": "https://www.crapo.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "25",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 16,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:id",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "ID",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S266"
                 ,"missed_votes_pct": 9.70,
                 "votes_with_party_pct": 95.92,
                 "votes_against_party_pct": 4.08
               },
                           {
                 "id": "C001098",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/C001098.json",
                 "first_name": "Ted",
                 "middle_name": null,
                 "last_name": "Cruz",
                 "suffix": null,
                 "date_of_birth": "1970-12-22",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenTedCruz",
                 "facebook_account": "SenatorTedCruz",
                 "youtube_account": "sentedcruz",
                 "govtrack_id": "412573",
                 "cspan_id": "1019953",
                 "votesmart_id": "135705",
                 "icpsr_id": "41304",
                 "crp_id": "N00033085",
                 "google_entity_id": "/m/07j6ty",
                 "fec_candidate_id": "S2TX00312",
                 "url": "https://www.cruz.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.cruz.senate.gov/?p=form&id=16",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 17,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:tx",
                 "office": "127a Russell Senate Office Building",
                 "phone": "202-224-5922",
                 "fax": null,
                 "state": "TX",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S355"
                 ,"missed_votes_pct": 10.30,
                 "votes_with_party_pct": 97.95,
                 "votes_against_party_pct": 2.05
               },
                           {
                 "id": "D000618",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/D000618.json",
                 "first_name": "Steve",
                 "middle_name": null,
                 "last_name": "Daines",
                 "suffix": null,
                 "date_of_birth": "1962-08-20",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SteveDaines",
                 "facebook_account": "SteveDainesMT",
                 "youtube_account": "SteveDainesMT",
                 "govtrack_id": "412549",
                 "cspan_id": "1034037",
                 "votesmart_id": "135720",
                 "icpsr_id": "21338",
                 "crp_id": "N00033054",
                 "google_entity_id": "/m/03qlc5t",
                 "fec_candidate_id": "H2MT01060",
                 "url": "https://www.daines.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.daines.senate.gov/connect/email-steve",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:mt",
                 "office": "320 Hart Senate Office Building",
                 "phone": "202-224-2651",
                 "fax": null,
                 "state": "MT",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S375"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 92.02,
                 "votes_against_party_pct": 7.98
               },
                           {
                 "id": "D000622",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/D000622.json",
                 "first_name": "Tammy",
                 "middle_name": null,
                 "last_name": "Duckworth",
                 "suffix": null,
                 "date_of_birth": "1968-03-12",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenDuckworth",
                 "facebook_account": "SenDuckworth",
                 "youtube_account": "repduckworth",
                 "govtrack_id": "412533",
                 "cspan_id": "94484",
                 "votesmart_id": "57442",
                 "icpsr_id": "21325",
                 "crp_id": "N00027860",
                 "google_entity_id": "/m/09vqjr",
                 "fec_candidate_id": "H6IL06141",
                 "url": "https://www.duckworth.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "7",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:il",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "IL",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S386"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 99.39,
                 "votes_against_party_pct": 0.61
               },
                           {
                 "id": "D000563",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/D000563.json",
                 "first_name": "Richard",
                 "middle_name": "J.",
                 "last_name": "Durbin",
                 "suffix": null,
                 "date_of_birth": "1944-11-21",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": "Senate Majority Whip",
                 "twitter_account": "SenatorDurbin",
                 "facebook_account": "SenatorDurbin",
                 "youtube_account": "SenatorDurbin",
                 "govtrack_id": "300038",
                 "cspan_id": "6741",
                 "votesmart_id": "26847",
                 "icpsr_id": "15021",
                 "crp_id": "N00004981",
                 "google_entity_id": "/m/01xcd1",
                 "fec_candidate_id": "S6IL00151",
                 "url": "https://www.durbin.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.durbin.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "27",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 12,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:il",
                 "office": "711 Hart Senate Office Building",
                 "phone": "202-224-2152",
                 "fax": null,
                 "state": "IL",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S253"
                 ,"missed_votes_pct": 7.27,
                 "votes_with_party_pct": 98.68,
                 "votes_against_party_pct": 1.32
               },
                           {
                 "id": "E000295",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/E000295.json",
                 "first_name": "Joni",
                 "middle_name": null,
                 "last_name": "Ernst",
                 "suffix": null,
                 "date_of_birth": "1970-07-01",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": "Senate Republican Conference Vice Chair",
                 "twitter_account": "SenJoniErnst",
                 "facebook_account": "senjoniernst",
                 "youtube_account": null,
                 "govtrack_id": "412667",
                 "cspan_id": "75342",
                 "votesmart_id": "128583",
                 "icpsr_id": "41502",
                 "crp_id": "N00035483",
                 "google_entity_id": "/m/0gg4wkg",
                 "fec_candidate_id": "S4IA00129",
                 "url": "https://www.ernst.senate.gov",
                 "rss_url": "https://www.ernst.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.ernst.senate.gov/public/index.cfm/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:19:58 -0400",
                 "ocd_id": "ocd-division/country:us/state:ia",
                 "office": "730 Hart Senate Office Building",
                 "phone": "202-224-3254",
                 "fax": null,
                 "state": "IA",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S376"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 95.06,
                 "votes_against_party_pct": 4.94
               },
                           {
                 "id": "F000062",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/F000062.json",
                 "first_name": "Dianne",
                 "middle_name": null,
                 "last_name": "Feinstein",
                 "suffix": null,
                 "date_of_birth": "1933-06-22",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenFeinstein",
                 "facebook_account": "senatorfeinstein",
                 "youtube_account": "SenatorFeinstein",
                 "govtrack_id": "300043",
                 "cspan_id": "13061",
                 "votesmart_id": "53273",
                 "icpsr_id": "49300",
                 "crp_id": "N00007364",
                 "google_entity_id": "/m/01gqws",
                 "fec_candidate_id": "S0CA00199",
                 "url": "https://www.feinstein.senate.gov",
                 "rss_url": "https://www.feinstein.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.feinstein.senate.gov/public/index.cfm/e-mail-me",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "31",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 106,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ca",
                 "office": "331 Hart Senate Office Building",
                 "phone": "202-224-3841",
                 "fax": null,
                 "state": "CA",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S221"
                 ,"missed_votes_pct": 64.24,
                 "votes_with_party_pct": 98.31,
                 "votes_against_party_pct": 1.69
               },
                           {
                 "id": "F000479",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/F000479.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Fetterman",
                 "suffix": null,
                 "date_of_birth": "1969-08-15",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456877",
                 "cspan_id": null,
                 "votesmart_id": "166286",
                 "icpsr_id": null,
                 "crp_id": null,
                 "google_entity_id": null,
                 "fec_candidate_id": "S6PA00274",
                 "url": "https://www.fetterman.senate.gov/",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 68,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:pa",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "PA",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S418"
                 ,"missed_votes_pct": 41.21,
                 "votes_with_party_pct": 96.91,
                 "votes_against_party_pct": 3.09
               },
                           {
                 "id": "F000463",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/F000463.json",
                 "first_name": "Deb",
                 "middle_name": null,
                 "last_name": "Fischer",
                 "suffix": null,
                 "date_of_birth": "1951-03-01",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorFischer",
                 "facebook_account": "senatordebfischer",
                 "youtube_account": "senatordebfischer",
                 "govtrack_id": "412556",
                 "cspan_id": "1034067",
                 "votesmart_id": "41963",
                 "icpsr_id": "41302",
                 "crp_id": "N00033443",
                 "google_entity_id": "/m/0c4cp0",
                 "fec_candidate_id": "S2NE00094",
                 "url": "https://www.fischer.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.fischer.senate.gov/public/index.cfm/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ne",
                 "office": "454 Russell Senate Office Building",
                 "phone": "202-224-6551",
                 "fax": null,
                 "state": "NE",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S357"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 96.93,
                 "votes_against_party_pct": 3.07
               },
                           {
                 "id": "G000555",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/G000555.json",
                 "first_name": "Kirsten",
                 "middle_name": "E.",
                 "last_name": "Gillibrand",
                 "suffix": null,
                 "date_of_birth": "1966-12-09",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "GillibrandNY",
                 "facebook_account": "SenKirstenGillibrand",
                 "youtube_account": "KirstenEGillibrand",
                 "govtrack_id": "412223",
                 "cspan_id": "1022862",
                 "votesmart_id": "65147",
                 "icpsr_id": "20735",
                 "crp_id": "N00027658",
                 "google_entity_id": "/m/0gnfc4",
                 "fec_candidate_id": "H6NY20167",
                 "url": "https://www.gillibrand.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.gillibrand.senate.gov/contact/email-me",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 7,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ny",
                 "office": "478 Russell Senate Office Building",
                 "phone": "202-224-4451",
                 "fax": null,
                 "state": "NY",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S331"
                 ,"missed_votes_pct": 4.24,
                 "votes_with_party_pct": 99.36,
                 "votes_against_party_pct": 0.64
               },
                           {
                 "id": "G000359",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/G000359.json",
                 "first_name": "Lindsey",
                 "middle_name": null,
                 "last_name": "Graham",
                 "suffix": null,
                 "date_of_birth": "1955-07-09",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "GrahamBlog",
                 "facebook_account": "USSenatorLindseyGraham",
                 "youtube_account": "USSenLindseyGraham",
                 "govtrack_id": "300047",
                 "cspan_id": "36782",
                 "votesmart_id": "21992",
                 "icpsr_id": "29566",
                 "crp_id": "N00009975",
                 "google_entity_id": "/m/01_pdg",
                 "fec_candidate_id": "S0SC00149",
                 "url": "https://www.lgraham.senate.gov/public",
                 "rss_url": "https://www.lgraham.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.lgraham.senate.gov/public/index.cfm/e-mail-senator-graham",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "21",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:sc",
                 "office": "290 Russell Senate Office Building",
                 "phone": "202-224-5972",
                 "fax": null,
                 "state": "SC",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S293"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 52.83,
                 "votes_against_party_pct": 47.17
               },
                           {
                 "id": "G000386",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/G000386.json",
                 "first_name": "Charles",
                 "middle_name": "E.",
                 "last_name": "Grassley",
                 "suffix": null,
                 "date_of_birth": "1933-09-17",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "President Pro Tempore of the Senate",
                 "twitter_account": "ChuckGrassley",
                 "facebook_account": "grassley",
                 "youtube_account": "senchuckgrassley",
                 "govtrack_id": "300048",
                 "cspan_id": "1167",
                 "votesmart_id": "53293",
                 "icpsr_id": "14226",
                 "crp_id": "N00001758",
                 "google_entity_id": "/m/020ymy",
                 "fec_candidate_id": "S0IA00028",
                 "url": "https://www.grassley.senate.gov",
                 "rss_url": "https://www.grassley.senate.gov/?q=rss.xml",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "43",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ia",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "IA",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S153"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 72.39,
                 "votes_against_party_pct": 27.61
               },
                           {
                 "id": "H000601",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H000601.json",
                 "first_name": "Bill",
                 "middle_name": null,
                 "last_name": "Hagerty",
                 "suffix": null,
                 "date_of_birth": "1959-08-14",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorHagerty",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456798",
                 "cspan_id": null,
                 "votesmart_id": "128466",
                 "icpsr_id": null,
                 "crp_id": "N00045369",
                 "google_entity_id": "/g/11c1xp6h9v",
                 "fec_candidate_id": "S0TN00169",
                 "url": "https://www.hagerty.senate.gov",
                 "rss_url": "https://www.hagerty.senate.gov/press-releases/feed/",
                 "contact_form": "https://www.hagerty.senate.gov/email-me/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 16,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:tn",
                 "office": "248 Russell Senate Office Building",
                 "phone": "202-224-4944",
                 "fax": null,
                 "state": "TN",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S407"
                 ,"missed_votes_pct": 9.70,
                 "votes_with_party_pct": 97.97,
                 "votes_against_party_pct": 2.03
               },
                           {
                 "id": "H001076",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001076.json",
                 "first_name": "Margaret",
                 "middle_name": null,
                 "last_name": "Hassan",
                 "suffix": null,
                 "date_of_birth": "1958-02-27",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "Senatorhassan",
                 "facebook_account": "SenatorHassan",
                 "youtube_account": null,
                 "govtrack_id": "412680",
                 "cspan_id": "67481",
                 "votesmart_id": "42552",
                 "icpsr_id": "41702",
                 "crp_id": "N00038397",
                 "google_entity_id": "/m/03c3zch",
                 "fec_candidate_id": "S6NH00091",
                 "url": "https://www.hassan.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nh",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "NH",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S388"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "H001089",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001089.json",
                 "first_name": "Joshua",
                 "middle_name": null,
                 "last_name": "Hawley",
                 "suffix": null,
                 "date_of_birth": "1979-12-31",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenHawleyPress",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "412840",
                 "cspan_id": null,
                 "votesmart_id": "169716",
                 "icpsr_id": null,
                 "crp_id": "N00041620",
                 "google_entity_id": "/g/11bwy_95zy",
                 "fec_candidate_id": "S8MO00160",
                 "url": "https://www.hawley.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.hawley.senate.gov/contact-senator-hawley",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:mo",
                 "office": "115 Russell Senate Office Building",
                 "phone": "202-224-6154",
                 "fax": null,
                 "state": "MO",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S399"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 90.74,
                 "votes_against_party_pct": 9.26
               },
                           {
                 "id": "H001046",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001046.json",
                 "first_name": "Martin",
                 "middle_name": null,
                 "last_name": "Heinrich",
                 "suffix": null,
                 "date_of_birth": "1971-10-17",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "MartinHeinrich",
                 "facebook_account": "MartinHeinrich",
                 "youtube_account": "SenMartinHeinrich",
                 "govtrack_id": "412281",
                 "cspan_id": "1030686",
                 "votesmart_id": "74517",
                 "icpsr_id": "20930",
                 "crp_id": "N00029835",
                 "google_entity_id": "/m/02qkv0r",
                 "fec_candidate_id": "H8NM01224",
                 "url": "https://www.heinrich.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.heinrich.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nm",
                 "office": "303 Hart Senate Office Building",
                 "phone": "202-224-5521",
                 "fax": null,
                 "state": "NM",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S359"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "H000273",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H000273.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Hickenlooper",
                 "suffix": null,
                 "date_of_birth": "1952-02-07",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorHick",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456797",
                 "cspan_id": null,
                 "votesmart_id": null,
                 "icpsr_id": null,
                 "crp_id": "N00044206",
                 "google_entity_id": "/m/04g_1z",
                 "fec_candidate_id": "S0CO00575",
                 "url": "https://www.hickenlooper.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.hickenlooper.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:co",
                 "office": "374 Russell Senate Office Building",
                 "phone": "202-224-5941",
                 "fax": null,
                 "state": "CO",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S408"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "H001042",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001042.json",
                 "first_name": "Mazie",
                 "middle_name": "K.",
                 "last_name": "Hirono",
                 "suffix": null,
                 "date_of_birth": "1947-11-03",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "MazieHirono",
                 "facebook_account": "senatorhirono",
                 "youtube_account": "CongresswomanHirono",
                 "govtrack_id": "412200",
                 "cspan_id": "91216",
                 "votesmart_id": "1677",
                 "icpsr_id": "20713",
                 "crp_id": "N00028139",
                 "google_entity_id": "/m/0357cd",
                 "fec_candidate_id": "H6HI02251",
                 "url": "https://www.hirono.senate.gov",
                 "rss_url": "https://www.hirono.senate.gov/rss/feeds/",
                 "contact_form": "https://www.hirono.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:hi",
                 "office": "109 Hart Senate Office Building",
                 "phone": "202-224-6361",
                 "fax": null,
                 "state": "HI",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S361"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.17,
                 "votes_against_party_pct": 1.83
               },
                           {
                 "id": "H001061",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001061.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Hoeven",
                 "suffix": null,
                 "date_of_birth": "1957-03-13",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenJohnHoeven",
                 "facebook_account": "SenatorJohnHoeven",
                 "youtube_account": "senatorjohnhoevennd",
                 "govtrack_id": "412494",
                 "cspan_id": "85233",
                 "votesmart_id": "41788",
                 "icpsr_id": "41107",
                 "crp_id": "N00031688",
                 "google_entity_id": "/m/01qb45",
                 "fec_candidate_id": "S0ND00093",
                 "url": "https://www.hoeven.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nd",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "ND",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S344"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 93.08,
                 "votes_against_party_pct": 6.92
               },
                           {
                 "id": "H001079",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/H001079.json",
                 "first_name": "Cindy",
                 "middle_name": null,
                 "last_name": "Hyde-Smith",
                 "suffix": null,
                 "date_of_birth": "1959-05-10",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenHydeSmith",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "412743",
                 "cspan_id": "113208",
                 "votesmart_id": "20784",
                 "icpsr_id": "41707",
                 "crp_id": "N00043298",
                 "google_entity_id": "/m/03wc2px",
                 "fec_candidate_id": "S8MS00261",
                 "url": "https://www.hydesmith.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.hydesmith.senate.gov/content/contact-senator",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "6",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ms",
                 "office": "702 Hart Senate Office Building",
                 "phone": "202-224-5054",
                 "fax": null,
                 "state": "MS",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S395"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 95.03,
                 "votes_against_party_pct": 4.97
               },
                           {
                 "id": "J000293",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/J000293.json",
                 "first_name": "Ron",
                 "middle_name": null,
                 "last_name": "Johnson",
                 "suffix": null,
                 "date_of_birth": "1955-04-08",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenRonJohnson",
                 "facebook_account": "senronjohnson",
                 "youtube_account": "SenatorRonJohnson",
                 "govtrack_id": "412496",
                 "cspan_id": "62835",
                 "votesmart_id": "126217",
                 "icpsr_id": "41111",
                 "crp_id": "N00032546",
                 "google_entity_id": "/m/0cmdpzc",
                 "fec_candidate_id": "S0WI00197",
                 "url": "https://www.ronjohnson.senate.gov",
                 "rss_url": "https://www.ronjohnson.senate.gov/public/?a=rss.feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-22 01:45:31 -0400",
                 "ocd_id": "ocd-division/country:us/state:wi",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "WI",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S345"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 98.11,
                 "votes_against_party_pct": 1.89
               },
                           {
                 "id": "K000384",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/K000384.json",
                 "first_name": "Tim",
                 "middle_name": null,
                 "last_name": "Kaine",
                 "suffix": null,
                 "date_of_birth": "1958-02-26",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": "SenatorKaine",
                 "youtube_account": "SenatorTimKaine",
                 "govtrack_id": "412582",
                 "cspan_id": "49219",
                 "votesmart_id": "50772",
                 "icpsr_id": "41305",
                 "crp_id": "N00033177",
                 "google_entity_id": "/m/053f8h",
                 "fec_candidate_id": "S2VA00142",
                 "url": "https://www.kaine.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.kaine.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:va",
                 "office": "231 Russell Senate Office Building",
                 "phone": "202-224-4024",
                 "fax": null,
                 "state": "VA",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S362"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "K000377",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/K000377.json",
                 "first_name": "Mark",
                 "middle_name": null,
                 "last_name": "Kelly",
                 "suffix": null,
                 "date_of_birth": "1964-02-21",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenMarkKelly",
                 "facebook_account": "SenMarkKelly",
                 "youtube_account": "SenMarkKelly",
                 "govtrack_id": "456794",
                 "cspan_id": null,
                 "votesmart_id": "190594",
                 "icpsr_id": null,
                 "crp_id": "N00044223",
                 "google_entity_id": "/m/02wsxy",
                 "fec_candidate_id": "S0AZ00350",
                 "url": "https://www.kelly.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 7,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:az",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "AZ",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S406"
                 ,"missed_votes_pct": 4.24,
                 "votes_with_party_pct": 98.09,
                 "votes_against_party_pct": 1.91
               },
                           {
                 "id": "K000393",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/K000393.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Kennedy",
                 "suffix": null,
                 "date_of_birth": "1951-11-21",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenJohnKennedy",
                 "facebook_account": "JohnKennedyLouisiana",
                 "youtube_account": null,
                 "govtrack_id": "412679",
                 "cspan_id": "1011723",
                 "votesmart_id": "35496",
                 "icpsr_id": "41703",
                 "crp_id": "N00026823",
                 "google_entity_id": "/m/0fl2sv",
                 "fec_candidate_id": "S4LA00065",
                 "url": "https://www.kennedy.senate.gov/public",
                 "rss_url": "https://www.kennedy.senate.gov/public/?a=RSS.Feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:la",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "LA",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S389"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 82.10,
                 "votes_against_party_pct": 17.90
               },
                           {
                 "id": "K000383",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/K000383.json",
                 "first_name": "Angus",
                 "middle_name": null,
                 "last_name": "King",
                 "suffix": null,
                 "date_of_birth": "1944-03-31",
                 "gender": "M",
                 "party": "ID",
                 "leadership_role": null,
                 "twitter_account": "SenAngusKing",
                 "facebook_account": "SenatorAngusSKingJr",
                 "youtube_account": "SenatorAngusKing",
                 "govtrack_id": "412545",
                 "cspan_id": "37413",
                 "votesmart_id": "22381",
                 "icpsr_id": "41300",
                 "crp_id": "N00034580",
                 "google_entity_id": "/m/02hfx0",
                 "fec_candidate_id": "S2ME00109",
                 "url": "https://www.king.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.king.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:me",
                 "office": "133 Hart Senate Office Building",
                 "phone": "202-224-5344",
                 "fax": null,
                 "state": "ME",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S363"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 98.16,
                 "votes_against_party_pct": 1.84
               },
                           {
                 "id": "K000367",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/K000367.json",
                 "first_name": "Amy",
                 "middle_name": null,
                 "last_name": "Klobuchar",
                 "suffix": null,
                 "date_of_birth": "1960-05-25",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": "Senate Democratic Steering Committee Chair",
                 "twitter_account": "SenAmyKlobuchar",
                 "facebook_account": null,
                 "youtube_account": "senatorklobuchar",
                 "govtrack_id": "412242",
                 "cspan_id": "83701",
                 "votesmart_id": "65092",
                 "icpsr_id": "40700",
                 "crp_id": "N00027500",
                 "google_entity_id": "/m/05fbpt",
                 "fec_candidate_id": "S6MN00267",
                 "url": "https://www.klobuchar.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.klobuchar.senate.gov/public/index.cfm/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:mn",
                 "office": "425 Dirksen Senate Office Building",
                 "phone": "202-224-3244",
                 "fax": null,
                 "state": "MN",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S311"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 99.39,
                 "votes_against_party_pct": 0.61
               },
                           {
                 "id": "L000575",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/L000575.json",
                 "first_name": "James",
                 "middle_name": null,
                 "last_name": "Lankford",
                 "suffix": null,
                 "date_of_birth": "1968-03-04",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorLankford",
                 "facebook_account": "SenatorLankford",
                 "youtube_account": "SenatorLankford",
                 "govtrack_id": "412464",
                 "cspan_id": "1033847",
                 "votesmart_id": "124938",
                 "icpsr_id": "21166",
                 "crp_id": "N00031129",
                 "google_entity_id": "/m/0dgrrx6",
                 "fec_candidate_id": "H0OK05114",
                 "url": "https://www.lankford.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ok",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "OK",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S378"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 98.77,
                 "votes_against_party_pct": 1.23
               },
                           {
                 "id": "L000577",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/L000577.json",
                 "first_name": "Mike",
                 "middle_name": null,
                 "last_name": "Lee",
                 "suffix": null,
                 "date_of_birth": "1971-06-04",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenMikeLee",
                 "facebook_account": "senatormikelee",
                 "youtube_account": "senatormikelee",
                 "govtrack_id": "412495",
                 "cspan_id": "9267977",
                 "votesmart_id": "66395",
                 "icpsr_id": "41110",
                 "crp_id": "N00031696",
                 "google_entity_id": "/m/09v5q9x",
                 "fec_candidate_id": "S0UT00165",
                 "url": "https://www.lee.senate.gov",
                 "rss_url": "https://www.lee.senate.gov/public/?a=rss.feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ut",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "UT",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S346"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 87.42,
                 "votes_against_party_pct": 12.58
               },
                           {
                 "id": "L000570",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/L000570.json",
                 "first_name": "Ben",
                 "middle_name": "Ray",
                 "last_name": "Luján",
                 "suffix": null,
                 "date_of_birth": "1972-06-07",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": "Assistant Speaker of the House",
                 "twitter_account": "SenatorLujan",
                 "facebook_account": "RepBenRayLujan",
                 "youtube_account": "Repbenraylujan",
                 "govtrack_id": "412293",
                 "cspan_id": "1031351",
                 "votesmart_id": "102842",
                 "icpsr_id": "20932",
                 "crp_id": "N00029562",
                 "google_entity_id": "/m/0412qzq",
                 "fec_candidate_id": "H8NM03196",
                 "url": "https://www.lujan.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.lujan.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:nm",
                 "office": "498 Russell Senate Office Building",
                 "phone": "202-224-6621",
                 "fax": null,
                 "state": "NM",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S409"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "L000571",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/L000571.json",
                 "first_name": "Cynthia",
                 "middle_name": "M.",
                 "last_name": "Lummis",
                 "suffix": null,
                 "date_of_birth": "1954-09-10",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenLummis",
                 "facebook_account": "152754318103332",
                 "youtube_account": "CynthiaLummis",
                 "govtrack_id": "412294",
                 "cspan_id": "1031365",
                 "votesmart_id": "15546",
                 "icpsr_id": "20953",
                 "crp_id": "N00029788",
                 "google_entity_id": "/m/02qvjv3",
                 "fec_candidate_id": "H8WY00148",
                 "url": "https://www.lummis.senate.gov",
                 "rss_url": "https://www.lummis.senate.gov/press-releases/feed/",
                 "contact_form": "https://www.lummis.senate.gov/contact/contact-form/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:wy",
                 "office": "124 Russell Senate Office Building",
                 "phone": "202-224-3424",
                 "fax": null,
                 "state": "WY",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S410"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 93.71,
                 "votes_against_party_pct": 6.29
               },
                           {
                 "id": "M001183",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001183.json",
                 "first_name": "Joe",
                 "middle_name": null,
                 "last_name": "Manchin",
                 "suffix": "III",
                 "date_of_birth": "1947-08-24",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "Sen_JoeManchin",
                 "facebook_account": "JoeManchinIII",
                 "youtube_account": "SenatorJoeManchin",
                 "govtrack_id": "412391",
                 "cspan_id": "62864",
                 "votesmart_id": "7547",
                 "icpsr_id": "40915",
                 "crp_id": "N00032838",
                 "google_entity_id": "/m/04lc5t",
                 "fec_candidate_id": "S0WV00090",
                 "url": "https://www.manchin.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.manchin.senate.gov/public/index.cfm/contact-form",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:wv",
                 "office": "306 Hart Senate Office Building",
                 "phone": "202-224-3954",
                 "fax": null,
                 "state": "WV",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S338"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 80.25,
                 "votes_against_party_pct": 19.75
               },
                           {
                 "id": "M000133",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M000133.json",
                 "first_name": "Edward",
                 "middle_name": "J.",
                 "last_name": "Markey",
                 "suffix": null,
                 "date_of_birth": "1946-07-11",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenMarkey",
                 "facebook_account": "EdJMarkey",
                 "youtube_account": "RepMarkey",
                 "govtrack_id": "400253",
                 "cspan_id": "260",
                 "votesmart_id": "26900",
                 "icpsr_id": "14435",
                 "crp_id": "N00000270",
                 "google_entity_id": "/m/028vr4",
                 "fec_candidate_id": "H6MA07101",
                 "url": "https://www.markey.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.markey.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ma",
                 "office": "255 Dirksen Senate Office Building",
                 "phone": "202-224-2742",
                 "fax": null,
                 "state": "MA",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S369"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 97.53,
                 "votes_against_party_pct": 2.47
               },
                           {
                 "id": "M001198",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001198.json",
                 "first_name": "Roger",
                 "middle_name": null,
                 "last_name": "Marshall",
                 "suffix": null,
                 "date_of_birth": "1960-08-09",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorMarshall",
                 "facebook_account": "rogermarshallmd",
                 "youtube_account": null,
                 "govtrack_id": "412704",
                 "cspan_id": "103425",
                 "votesmart_id": "172080",
                 "icpsr_id": "21734",
                 "crp_id": "N00037034",
                 "google_entity_id": "/g/11c4btdtm1",
                 "fec_candidate_id": "H6KS01179",
                 "url": "https://www.marshall.senate.gov",
                 "rss_url": "https://www.marshall.senate.gov/media/press-releases/feed/",
                 "contact_form": "https://www.marshall.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ks",
                 "office": "479a Russell Senate Office Building",
                 "phone": "202-224-4774",
                 "fax": null,
                 "state": "KS",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S411"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 90.74,
                 "votes_against_party_pct": 9.26
               },
                           {
                 "id": "M000355",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M000355.json",
                 "first_name": "Mitch",
                 "middle_name": null,
                 "last_name": "McConnell",
                 "suffix": null,
                 "date_of_birth": "1942-02-20",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "Senate Minority Leader",
                 "twitter_account": "McConnellPress",
                 "facebook_account": "mitchmcconnell",
                 "youtube_account": null,
                 "govtrack_id": "300072",
                 "cspan_id": "2351",
                 "votesmart_id": "53298",
                 "icpsr_id": "14921",
                 "crp_id": "N00003389",
                 "google_entity_id": "/m/01z6ls",
                 "fec_candidate_id": "S2KY00012",
                 "url": "https://www.mcconnell.senate.gov",
                 "rss_url": "https://www.mcconnell.senate.gov/public/?a=RSS.Feed",
                 "contact_form": "https://www.mcconnell.senate.gov/public/index.cfm?p=contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "39",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 33,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ky",
                 "office": "317 Russell Senate Office Building",
                 "phone": "202-224-2541",
                 "fax": null,
                 "state": "KY",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S174"
                 ,"missed_votes_pct": 20.00,
                 "votes_with_party_pct": 77.10,
                 "votes_against_party_pct": 22.90
               },
                           {
                 "id": "M000639",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M000639.json",
                 "first_name": "Robert",
                 "middle_name": null,
                 "last_name": "Menendez",
                 "suffix": null,
                 "date_of_birth": "1954-01-01",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorMenendez",
                 "facebook_account": "senatormenendez",
                 "youtube_account": "SenatorMenendezNJ",
                 "govtrack_id": "400272",
                 "cspan_id": "29608",
                 "votesmart_id": "26961",
                 "icpsr_id": "29373",
                 "crp_id": "N00000699",
                 "google_entity_id": "/m/033d3p",
                 "fec_candidate_id": "H2NJ13075",
                 "url": "https://www.menendez.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.menendez.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "18",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:nj",
                 "office": "528 Hart Senate Office Building",
                 "phone": "202-224-4744",
                 "fax": null,
                 "state": "NJ",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S306"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "M001176",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001176.json",
                 "first_name": "Jeff",
                 "middle_name": null,
                 "last_name": "Merkley",
                 "suffix": null,
                 "date_of_birth": "1956-10-24",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenJeffMerkley",
                 "facebook_account": "jeffmerkley",
                 "youtube_account": "SenatorJeffMerkley",
                 "govtrack_id": "412325",
                 "cspan_id": "1029842",
                 "votesmart_id": "23644",
                 "icpsr_id": "40908",
                 "crp_id": "N00029303",
                 "google_entity_id": "/m/026k60f",
                 "fec_candidate_id": "S8OR00207",
                 "url": "https://www.merkley.senate.gov",
                 "rss_url": "https://www.merkley.senate.gov/rss/feeds/",
                 "contact_form": "https://www.merkley.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 15,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:or",
                 "office": "531 Hart Senate Office Building",
                 "phone": "202-224-3753",
                 "fax": null,
                 "state": "OR",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S322"
                 ,"missed_votes_pct": 9.09,
                 "votes_with_party_pct": 97.32,
                 "votes_against_party_pct": 2.68
               },
                           {
                 "id": "M000934",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M000934.json",
                 "first_name": "Jerry",
                 "middle_name": null,
                 "last_name": "Moran",
                 "suffix": null,
                 "date_of_birth": "1954-05-29",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "JerryMoran",
                 "facebook_account": "jerrymoran",
                 "youtube_account": "senatorjerrymoran",
                 "govtrack_id": "400284",
                 "cspan_id": "45469",
                 "votesmart_id": "542",
                 "icpsr_id": "29722",
                 "crp_id": "N00005282",
                 "google_entity_id": "/m/024s8t",
                 "fec_candidate_id": "H6KS01096",
                 "url": "https://www.moran.senate.gov",
                 "rss_url": "https://www.moran.senate.gov/public/?a=rss.feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 14,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ks",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "KS",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S347"
                 ,"missed_votes_pct": 8.48,
                 "votes_with_party_pct": 79.87,
                 "votes_against_party_pct": 20.13
               },
                           {
                 "id": "M001190",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001190.json",
                 "first_name": "Markwayne",
                 "middle_name": null,
                 "last_name": "Mullin",
                 "suffix": null,
                 "date_of_birth": "1977-07-26",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "RepMullin",
                 "facebook_account": "RepMullin",
                 "youtube_account": null,
                 "govtrack_id": "412568",
                 "cspan_id": "1034045",
                 "votesmart_id": "135898",
                 "icpsr_id": "21355",
                 "crp_id": "N00033410",
                 "google_entity_id": "/m/0lq78pn",
                 "fec_candidate_id": "H2OK02083",
                 "url": "",
                 "rss_url": "https://mullin.house.gov/news/rss.aspx",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ok",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "OK",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S419"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 96.84,
                 "votes_against_party_pct": 3.16
               },
                           {
                 "id": "M001153",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001153.json",
                 "first_name": "Lisa",
                 "middle_name": null,
                 "last_name": "Murkowski",
                 "suffix": null,
                 "date_of_birth": "1957-05-22",
                 "gender": "F",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "LisaMurkowski",
                 "facebook_account": "SenLisaMurkowski",
                 "youtube_account": "senatormurkowski",
                 "govtrack_id": "300075",
                 "cspan_id": "1004138",
                 "votesmart_id": "15841",
                 "icpsr_id": "40300",
                 "crp_id": "N00026050",
                 "google_entity_id": "/m/0202kt",
                 "fec_candidate_id": "S4AK00099",
                 "url": "https://www.murkowski.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "23",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 6,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ak",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "AK",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S288"
                 ,"missed_votes_pct": 3.64,
                 "votes_with_party_pct": 40.13,
                 "votes_against_party_pct": 59.87
               },
                           {
                 "id": "M001169",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001169.json",
                 "first_name": "Christopher",
                 "middle_name": "S.",
                 "last_name": "Murphy",
                 "suffix": null,
                 "date_of_birth": "1973-08-03",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "senmurphyoffice",
                 "facebook_account": "chrismurphyct",
                 "youtube_account": "senchrismurphy",
                 "govtrack_id": "412194",
                 "cspan_id": "1021270",
                 "votesmart_id": "17189",
                 "icpsr_id": "20707",
                 "crp_id": "N00027566",
                 "google_entity_id": "/m/0cy_dh",
                 "fec_candidate_id": "H6CT05124",
                 "url": "https://www.murphy.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.murphy.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ct",
                 "office": "136 Hart Senate Office Building",
                 "phone": "202-224-4041",
                 "fax": null,
                 "state": "CT",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S364"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "M001111",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/M001111.json",
                 "first_name": "Patty",
                 "middle_name": null,
                 "last_name": "Murray",
                 "suffix": null,
                 "date_of_birth": "1950-10-11",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": "Assistant Senate Majority Leader",
                 "twitter_account": "PattyMurray",
                 "facebook_account": null,
                 "youtube_account": "SenatorPattyMurray",
                 "govtrack_id": "300076",
                 "cspan_id": "25277",
                 "votesmart_id": "53358",
                 "icpsr_id": "49308",
                 "crp_id": "N00007876",
                 "google_entity_id": "/m/018qx5",
                 "fec_candidate_id": "S2WA00189",
                 "url": "https://www.murray.senate.gov",
                 "rss_url": "https://www.murray.senate.gov/category/press-releases/feed/",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "31",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 6,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:wa",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "WA",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S229"
                 ,"missed_votes_pct": 3.64,
                 "votes_with_party_pct": 99.37,
                 "votes_against_party_pct": 0.63
               },
                           {
                 "id": "O000174",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/O000174.json",
                 "first_name": "Jon",
                 "middle_name": null,
                 "last_name": "Ossoff",
                 "suffix": null,
                 "date_of_birth": "1987-02-16",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenOssoff",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456857",
                 "cspan_id": null,
                 "votesmart_id": "176134",
                 "icpsr_id": null,
                 "crp_id": "N00040675",
                 "google_entity_id": "/g/11g6njlbw2",
                 "fec_candidate_id": "H8GA06195",
                 "url": "https://www.ossoff.senate.gov",
                 "rss_url": "https://www.ossoff.senate.gov/media/press-releases/feed/",
                 "contact_form": "https://www.ossoff.senate.gov/contact-us/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ga",
                 "office": "455 Russell Senate Office Building",
                 "phone": "202-224-3521",
                 "fax": null,
                 "state": "GA",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S414"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "P000145",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/P000145.json",
                 "first_name": "Alex",
                 "middle_name": null,
                 "last_name": "Padilla",
                 "suffix": null,
                 "date_of_birth": "1973-03-22",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenAlexPadilla",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456856",
                 "cspan_id": null,
                 "votesmart_id": "59742",
                 "icpsr_id": null,
                 "crp_id": "N00047888",
                 "google_entity_id": "/m/0749wj",
                 "fec_candidate_id": "S2CA00955",
                 "url": "https://www.padilla.senate.gov",
                 "rss_url": "https://www.padilla.senate.gov/feed/",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ca",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "CA",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S413"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 99.37,
                 "votes_against_party_pct": 0.63
               },
                           {
                 "id": "P000603",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/P000603.json",
                 "first_name": "Rand",
                 "middle_name": null,
                 "last_name": "Paul",
                 "suffix": null,
                 "date_of_birth": "1963-01-07",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "RandPaul",
                 "facebook_account": "SenatorRandPaul",
                 "youtube_account": "SenatorRandPaul",
                 "govtrack_id": "412492",
                 "cspan_id": "9265241",
                 "votesmart_id": "117285",
                 "icpsr_id": "41104",
                 "crp_id": "N00030836",
                 "google_entity_id": "/m/05pdb7q",
                 "fec_candidate_id": "S0KY00156",
                 "url": "https://www.paul.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:19:58 -0400",
                 "ocd_id": "ocd-division/country:us/state:ky",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "KY",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S348"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 88.75,
                 "votes_against_party_pct": 11.25
               },
                           {
                 "id": "P000595",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/P000595.json",
                 "first_name": "Gary",
                 "middle_name": null,
                 "last_name": "Peters",
                 "suffix": null,
                 "date_of_birth": "1958-12-01",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenGaryPeters",
                 "facebook_account": "SenGaryPeters",
                 "youtube_account": "RepGaryPeters",
                 "govtrack_id": "412305",
                 "cspan_id": "50199",
                 "votesmart_id": "8749",
                 "icpsr_id": "20923",
                 "crp_id": "N00029277",
                 "google_entity_id": "/m/02x0lnt",
                 "fec_candidate_id": "H8MI09068",
                 "url": "https://www.peters.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.peters.senate.gov/contact/email-gary",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:mi",
                 "office": "724 Hart Senate Office Building",
                 "phone": "202-224-6221",
                 "fax": null,
                 "state": "MI",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S380"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.17,
                 "votes_against_party_pct": 1.83
               },
                           {
                 "id": "R000122",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000122.json",
                 "first_name": "Jack",
                 "middle_name": null,
                 "last_name": "Reed",
                 "suffix": null,
                 "date_of_birth": "1949-11-12",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenJackReed",
                 "facebook_account": "SenJackReed",
                 "youtube_account": "SenatorReed",
                 "govtrack_id": "300081",
                 "cspan_id": "24239",
                 "votesmart_id": "27060",
                 "icpsr_id": "29142",
                 "crp_id": "N00000362",
                 "google_entity_id": "/m/0202mc",
                 "fec_candidate_id": "S6RI00163",
                 "url": "https://www.reed.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.reed.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "27",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ri",
                 "office": "728 Hart Senate Office Building",
                 "phone": "202-224-4642",
                 "fax": null,
                 "state": "RI",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S259"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "R000618",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000618.json",
                 "first_name": "Pete",
                 "middle_name": null,
                 "last_name": "Ricketts",
                 "suffix": null,
                 "date_of_birth": "1964-08-19",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": null,
                 "cspan_id": null,
                 "votesmart_id": null,
                 "icpsr_id": null,
                 "crp_id": null,
                 "google_entity_id": null,
                 "fec_candidate_id": "",
                 "url": "https://www.ricketts.senate.gov/",
                 "rss_url": "",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:06 -0400",
                 "ocd_id": "ocd-division/country:us/state:ne",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "NE",
                 "senate_class": "2",
                 "state_rank": "",
                 "lis_id": "S423"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 91.36,
                 "votes_against_party_pct": 8.64
               },
                           {
                 "id": "R000584",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000584.json",
                 "first_name": "Jim",
                 "middle_name": null,
                 "last_name": "Risch",
                 "suffix": null,
                 "date_of_birth": "1943-05-03",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorRisch",
                 "facebook_account": "senatorjimrisch",
                 "youtube_account": "SenatorJamesRisch",
                 "govtrack_id": "412322",
                 "cspan_id": "1020034",
                 "votesmart_id": "2919",
                 "icpsr_id": "40902",
                 "crp_id": "N00029441",
                 "google_entity_id": "/m/06y9p0",
                 "fec_candidate_id": "S8ID00092",
                 "url": "https://www.risch.senate.gov",
                 "rss_url": "https://www.risch.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.risch.senate.gov/public/index.cfm?p=Email",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 13,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:id",
                 "office": "483 Russell Senate Office Building",
                 "phone": "202-224-2752",
                 "fax": null,
                 "state": "ID",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S323"
                 ,"missed_votes_pct": 7.88,
                 "votes_with_party_pct": 95.36,
                 "votes_against_party_pct": 4.64
               },
                           {
                 "id": "R000615",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000615.json",
                 "first_name": "Mitt",
                 "middle_name": null,
                 "last_name": "Romney",
                 "suffix": null,
                 "date_of_birth": "1947-03-12",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorRomney",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "412841",
                 "cspan_id": null,
                 "votesmart_id": "21942",
                 "icpsr_id": null,
                 "crp_id": "N00000286",
                 "google_entity_id": "/m/0271_s",
                 "fec_candidate_id": "S8UT00176",
                 "url": "https://www.romney.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.romney.senate.gov/contact-senator-romney",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ut",
                 "office": "354 Russell Senate Office Building",
                 "phone": "202-224-5251",
                 "fax": null,
                 "state": "UT",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S401"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 77.91,
                 "votes_against_party_pct": 22.09
               },
                           {
                 "id": "R000608",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000608.json",
                 "first_name": "Jacky",
                 "middle_name": null,
                 "last_name": "Rosen",
                 "suffix": null,
                 "date_of_birth": "1957-08-02",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenJackyRosen",
                 "facebook_account": "RepJackyRosen",
                 "youtube_account": null,
                 "govtrack_id": "412715",
                 "cspan_id": "104738",
                 "votesmart_id": "169471",
                 "icpsr_id": "21743",
                 "crp_id": "N00038734",
                 "google_entity_id": "/g/11cntnvwkg",
                 "fec_candidate_id": "H6NV03139",
                 "url": "https://www.rosen.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.rosen.senate.gov/contact_jacky",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "5",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nv",
                 "office": "713 Hart Senate Office Building",
                 "phone": "202-224-6244",
                 "fax": null,
                 "state": "NV",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S402"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 93.90,
                 "votes_against_party_pct": 6.10
               },
                           {
                 "id": "R000605",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000605.json",
                 "first_name": "Mike",
                 "middle_name": null,
                 "last_name": "Rounds",
                 "suffix": null,
                 "date_of_birth": "1954-10-24",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorRounds",
                 "facebook_account": "SenatorMikeRounds",
                 "youtube_account": null,
                 "govtrack_id": "412669",
                 "cspan_id": "78317",
                 "votesmart_id": "7455",
                 "icpsr_id": "41505",
                 "crp_id": "N00035187",
                 "google_entity_id": "/m/020z2p",
                 "fec_candidate_id": "S4SD00049",
                 "url": "https://www.rounds.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.rounds.senate.gov/contact/email-mike",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:sd",
                 "office": "716 Hart Senate Office Building",
                 "phone": "202-224-5842",
                 "fax": null,
                 "state": "SD",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S381"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 76.69,
                 "votes_against_party_pct": 23.31
               },
                           {
                 "id": "R000595",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/R000595.json",
                 "first_name": "Marco",
                 "middle_name": null,
                 "last_name": "Rubio",
                 "suffix": null,
                 "date_of_birth": "1971-05-28",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenRubioPress",
                 "facebook_account": "SenatorMarcoRubio",
                 "youtube_account": "SenatorMarcoRubio",
                 "govtrack_id": "412491",
                 "cspan_id": "87599",
                 "votesmart_id": "1601",
                 "icpsr_id": "41102",
                 "crp_id": "N00030612",
                 "google_entity_id": "/m/0dpr5f",
                 "fec_candidate_id": "S0FL00338",
                 "url": "https://www.rubio.senate.gov",
                 "rss_url": "https://www.rubio.senate.gov/public/?a=rss.feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "13",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:fl",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "FL",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S350"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 97.47,
                 "votes_against_party_pct": 2.53
               },
                           {
                 "id": "S000033",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S000033.json",
                 "first_name": "Bernard",
                 "middle_name": null,
                 "last_name": "Sanders",
                 "suffix": null,
                 "date_of_birth": "1941-09-08",
                 "gender": "M",
                 "party": "ID",
                 "leadership_role": null,
                 "twitter_account": "SenSanders",
                 "facebook_account": "senatorsanders",
                 "youtube_account": "senatorsanders",
                 "govtrack_id": "400357",
                 "cspan_id": "994",
                 "votesmart_id": "27110",
                 "icpsr_id": "29147",
                 "crp_id": "N00000528",
                 "google_entity_id": "/m/01_gbv",
                 "fec_candidate_id": "H8VT01016",
                 "url": "https://www.sanders.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.sanders.senate.gov/contact/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 22,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:vt",
                 "office": "332 Dirksen Senate Office Building",
                 "phone": "202-224-5141",
                 "fax": null,
                 "state": "VT",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S313"
                 ,"missed_votes_pct": 13.33,
                 "votes_with_party_pct": 96.48,
                 "votes_against_party_pct": 3.52
               },
                           {
                 "id": "S001197",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001197.json",
                 "first_name": "Ben",
                 "middle_name": null,
                 "last_name": "Sasse",
                 "suffix": null,
                 "date_of_birth": "1972-02-22",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "",
                 "twitter_account": "SenSasse",
                 "facebook_account": "SenatorSasse",
                 "youtube_account": null,
                 "govtrack_id": "412671",
                 "cspan_id": "77429",
                 "votesmart_id": "150182",
                 "icpsr_id": "41503",
                 "crp_id": "N00035544",
                 "google_entity_id": "/m/0j5wk_6",
                 "fec_candidate_id": "S4NE00090",
                 "url": "https://www.sasse.senate.gov/public",
                 "rss_url": "https://www.sasse.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.sasse.senate.gov/public/index.cfm/email-ben",
                 "in_office": false,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 0,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-16 02:29:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ne",
                 "office": "139 Russell Senate Office Building",
                 "phone": "202-224-4224",
                 "fax": null,
                 "state": "NE",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S382"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 0.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "S001194",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001194.json",
                 "first_name": "Brian",
                 "middle_name": null,
                 "last_name": "Schatz",
                 "suffix": null,
                 "date_of_birth": "1972-10-20",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenBrianSchatz",
                 "facebook_account": "SenBrianSchatz",
                 "youtube_account": "senbrianschatz",
                 "govtrack_id": "412507",
                 "cspan_id": "87784",
                 "votesmart_id": "17852",
                 "icpsr_id": "41112",
                 "crp_id": "N00028138",
                 "google_entity_id": "/m/0dd109",
                 "fec_candidate_id": "S4HI00136",
                 "url": "https://www.schatz.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:hi",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "HI",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S353"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 99.39,
                 "votes_against_party_pct": 0.61
               },
                           {
                 "id": "S001227",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001227.json",
                 "first_name": "Eric",
                 "middle_name": null,
                 "last_name": "Schmitt",
                 "suffix": null,
                 "date_of_birth": "1975-06-20",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456875",
                 "cspan_id": null,
                 "votesmart_id": null,
                 "icpsr_id": null,
                 "crp_id": null,
                 "google_entity_id": null,
                 "fec_candidate_id": "S2MO00544",
                 "url": "https://www.schmitt.senate.gov/",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:01 -0400",
                 "ocd_id": "ocd-division/country:us/state:mo",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "MO",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S420"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 90.00,
                 "votes_against_party_pct": 10.00
               },
                           {
                 "id": "S000148",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S000148.json",
                 "first_name": "Charles",
                 "middle_name": "E.",
                 "last_name": "Schumer",
                 "suffix": null,
                 "date_of_birth": "1950-11-23",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": "Senate Majority Leader",
                 "twitter_account": "SenSchumer",
                 "facebook_account": "senschumer",
                 "youtube_account": "SenatorSchumer",
                 "govtrack_id": "300087",
                 "cspan_id": "5929",
                 "votesmart_id": "26976",
                 "icpsr_id": "14858",
                 "crp_id": "N00001093",
                 "google_entity_id": "/m/01w74d",
                 "fec_candidate_id": "S8NY00082",
                 "url": "https://www.schumer.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "25",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ny",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "NY",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S270"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 98.15,
                 "votes_against_party_pct": 1.85
               },
                           {
                 "id": "S001184",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001184.json",
                 "first_name": "Tim",
                 "middle_name": null,
                 "last_name": "Scott",
                 "suffix": null,
                 "date_of_birth": "1965-09-19",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorTimScott",
                 "facebook_account": "SenatorTimScott",
                 "youtube_account": "SenatorTimScott",
                 "govtrack_id": "412471",
                 "cspan_id": "623506",
                 "votesmart_id": "11940",
                 "icpsr_id": "21173",
                 "crp_id": "N00031782",
                 "google_entity_id": "/m/0c407g6",
                 "fec_candidate_id": "H0SC01279",
                 "url": "https://www.scott.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 11,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:sc",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "SC",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S365"
                 ,"missed_votes_pct": 6.67,
                 "votes_with_party_pct": 97.37,
                 "votes_against_party_pct": 2.63
               },
                           {
                 "id": "S001217",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001217.json",
                 "first_name": "Rick",
                 "middle_name": null,
                 "last_name": "Scott",
                 "suffix": null,
                 "date_of_birth": "1952-12-01",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenRickScott",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "412838",
                 "cspan_id": null,
                 "votesmart_id": "124204",
                 "icpsr_id": null,
                 "crp_id": "N00043290",
                 "google_entity_id": "/m/0btx2g",
                 "fec_candidate_id": "S8FL00273",
                 "url": "https://www.rickscott.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.rickscott.senate.gov/contact/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:fl",
                 "office": "502 Hart Senate Office Building",
                 "phone": "202-224-5274",
                 "fax": null,
                 "state": "FL",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S404"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 98.14,
                 "votes_against_party_pct": 1.86
               },
                           {
                 "id": "S001181",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001181.json",
                 "first_name": "Jeanne",
                 "middle_name": null,
                 "last_name": "Shaheen",
                 "suffix": null,
                 "date_of_birth": "1947-01-28",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorShaheen",
                 "facebook_account": "SenatorShaheen",
                 "youtube_account": "senatorshaheen",
                 "govtrack_id": "412323",
                 "cspan_id": "22850",
                 "votesmart_id": "1663",
                 "icpsr_id": "40906",
                 "crp_id": "N00024790",
                 "google_entity_id": "/m/01rrm2",
                 "fec_candidate_id": "S0NH00219",
                 "url": "https://www.shaheen.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.shaheen.senate.gov/contact/contact-jeanne",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:nh",
                 "office": "506 Hart Senate Office Building",
                 "phone": "202-224-2841",
                 "fax": null,
                 "state": "NH",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S324"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 98.76,
                 "votes_against_party_pct": 1.24
               },
                           {
                 "id": "S001191",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001191.json",
                 "first_name": "Kyrsten",
                 "middle_name": null,
                 "last_name": "Sinema",
                 "suffix": null,
                 "date_of_birth": "1976-07-12",
                 "gender": "F",
                 "party": "ID",
                 "leadership_role": null,
                 "twitter_account": "SenatorSinema",
                 "facebook_account": "CongresswomanSinema",
                 "youtube_account": "repsinema",
                 "govtrack_id": "412509",
                 "cspan_id": "68489",
                 "votesmart_id": "28338",
                 "icpsr_id": "21300",
                 "crp_id": "N00033983",
                 "google_entity_id": "/m/03qnndb",
                 "fec_candidate_id": "H2AZ09019",
                 "url": "https://www.sinema.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.sinema.senate.gov/contact-kyrsten",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "5",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:az",
                 "office": "317 Hart Senate Office Building",
                 "phone": "202-224-4521",
                 "fax": null,
                 "state": "AZ",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S403"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 93.87,
                 "votes_against_party_pct": 6.13
               },
                           {
                 "id": "S001203",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001203.json",
                 "first_name": "Tina",
                 "middle_name": null,
                 "last_name": "Smith",
                 "suffix": null,
                 "date_of_birth": "1958-03-04",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenTinaSmith",
                 "facebook_account": "USSenTinaSmith",
                 "youtube_account": null,
                 "govtrack_id": "412742",
                 "cspan_id": "111313",
                 "votesmart_id": "152968",
                 "icpsr_id": "41706",
                 "crp_id": "N00042353",
                 "google_entity_id": "/m/0127xvy3",
                 "fec_candidate_id": "S8MN00578",
                 "url": "https://www.smith.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.smith.senate.gov/share-your-opinion/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "6",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:mn",
                 "office": "720 Hart Senate Office Building",
                 "phone": "202-224-5641",
                 "fax": null,
                 "state": "MN",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S394"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "S000770",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S000770.json",
                 "first_name": "Debbie",
                 "middle_name": null,
                 "last_name": "Stabenow",
                 "suffix": null,
                 "date_of_birth": "1950-04-29",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": "",
                 "twitter_account": "SenStabenow",
                 "facebook_account": "SenatorStabenow",
                 "youtube_account": "senatorstabenow",
                 "govtrack_id": "300093",
                 "cspan_id": "45451",
                 "votesmart_id": "515",
                 "icpsr_id": "29732",
                 "crp_id": "N00004118",
                 "google_entity_id": "/m/01xh64",
                 "fec_candidate_id": "S8MI00281",
                 "url": "https://www.stabenow.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.stabenow.senate.gov/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "23",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:mi",
                 "office": "731 Hart Senate Office Building",
                 "phone": "202-224-4822",
                 "fax": null,
                 "state": "MI",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S284"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 98.77,
                 "votes_against_party_pct": 1.23
               },
                           {
                 "id": "S001198",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/S001198.json",
                 "first_name": "Dan",
                 "middle_name": null,
                 "last_name": "Sullivan",
                 "suffix": null,
                 "date_of_birth": "1964-11-13",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenDanSullivan",
                 "facebook_account": "SenDanSullivan",
                 "youtube_account": null,
                 "govtrack_id": "412665",
                 "cspan_id": "1023262",
                 "votesmart_id": "114964",
                 "icpsr_id": "41500",
                 "crp_id": "N00035774",
                 "google_entity_id": "/m/07s4r4q",
                 "fec_candidate_id": "S4AK00214",
                 "url": "https://www.sullivan.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.sullivan.senate.gov/contact/email",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 5,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ak",
                 "office": "302 Hart Senate Office Building",
                 "phone": "202-224-3004",
                 "fax": null,
                 "state": "AK",
                 "senate_class": "2",
                 "state_rank": "junior",
                 "lis_id": "S383"
                 ,"missed_votes_pct": 3.03,
                 "votes_with_party_pct": 93.04,
                 "votes_against_party_pct": 6.96
               },
                           {
                 "id": "T000464",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/T000464.json",
                 "first_name": "Jon",
                 "middle_name": null,
                 "last_name": "Tester",
                 "suffix": null,
                 "date_of_birth": "1956-08-21",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorTester",
                 "facebook_account": "senatortester",
                 "youtube_account": "senatorjontester",
                 "govtrack_id": "412244",
                 "cspan_id": "1020176",
                 "votesmart_id": "20928",
                 "icpsr_id": "40702",
                 "crp_id": "N00027605",
                 "google_entity_id": "/m/066cdp",
                 "fec_candidate_id": "S6MT00162",
                 "url": "https://www.tester.senate.gov",
                 "rss_url": "https://www.tester.senate.gov/rss/",
                 "contact_form": "https://www.tester.senate.gov/?p=email_senator",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:mt",
                 "office": "311 Hart Senate Office Building",
                 "phone": "202-224-2644",
                 "fax": null,
                 "state": "MT",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S314"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 93.29,
                 "votes_against_party_pct": 6.71
               },
                           {
                 "id": "T000250",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/T000250.json",
                 "first_name": "John",
                 "middle_name": null,
                 "last_name": "Thune",
                 "suffix": null,
                 "date_of_birth": "1961-01-07",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": "Senate Minority Whip",
                 "twitter_account": "SenJohnThune",
                 "facebook_account": null,
                 "youtube_account": "johnthune",
                 "govtrack_id": "400546",
                 "cspan_id": "45552",
                 "votesmart_id": "398",
                 "icpsr_id": "29754",
                 "crp_id": "N00004572",
                 "google_entity_id": "/m/03ybyn",
                 "fec_candidate_id": "S2SD00068",
                 "url": "https://www.thune.senate.gov",
                 "rss_url": "https://www.thune.senate.gov/public/?a=RSS.Feed",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "19",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:sd",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "SD",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S303"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 91.41,
                 "votes_against_party_pct": 8.59
               },
                           {
                 "id": "T000476",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/T000476.json",
                 "first_name": "Thom",
                 "middle_name": null,
                 "last_name": "Tillis",
                 "suffix": null,
                 "date_of_birth": "1960-08-30",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "senthomtillis",
                 "facebook_account": "SenatorThomTillis",
                 "youtube_account": null,
                 "govtrack_id": "412668",
                 "cspan_id": "77055",
                 "votesmart_id": "57717",
                 "icpsr_id": "41504",
                 "crp_id": "N00035492",
                 "google_entity_id": "/m/0fq0395",
                 "fec_candidate_id": "S4NC00162",
                 "url": "https://www.tillis.senate.gov",
                 "rss_url": null,
                 "contact_form": "https://www.tillis.senate.gov/public/index.cfm/email-me",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "9",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 15,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:nc",
                 "office": "113 Dirksen Senate Office Building",
                 "phone": "202-224-6342",
                 "fax": null,
                 "state": "NC",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S384"
                 ,"missed_votes_pct": 9.09,
                 "votes_with_party_pct": 69.59,
                 "votes_against_party_pct": 30.41
               },
                           {
                 "id": "T000278",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/T000278.json",
                 "first_name": "Tommy",
                 "middle_name": null,
                 "last_name": "Tuberville",
                 "suffix": null,
                 "date_of_birth": "1954-09-18",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenTuberville",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456796",
                 "cspan_id": null,
                 "votesmart_id": "188306",
                 "icpsr_id": null,
                 "crp_id": "N00044434",
                 "google_entity_id": "/m/04tmr4",
                 "fec_candidate_id": "S0AL00230",
                 "url": "https://www.tuberville.senate.gov",
                 "rss_url": "https://www.tuberville.senate.gov/feed/?post_type=press_releases",
                 "contact_form": "https://www.tuberville.senate.gov/contact/contact-form/",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 14,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:al",
                 "office": "142 Russell Senate Office Building",
                 "phone": "202-224-4124",
                 "fax": null,
                 "state": "AL",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S412"
                 ,"missed_votes_pct": 8.48,
                 "votes_with_party_pct": 97.33,
                 "votes_against_party_pct": 2.67
               },
                           {
                 "id": "V000128",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/V000128.json",
                 "first_name": "Chris",
                 "middle_name": null,
                 "last_name": "Van Hollen",
                 "suffix": null,
                 "date_of_birth": "1959-01-10",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "ChrisVanHollen",
                 "facebook_account": "chrisvanhollen",
                 "youtube_account": "RepChrisVanHollen",
                 "govtrack_id": "400415",
                 "cspan_id": "20756",
                 "votesmart_id": "6098",
                 "icpsr_id": "20330",
                 "crp_id": "N00013820",
                 "google_entity_id": "/m/025kb5",
                 "fec_candidate_id": "H2MD08126",
                 "url": "https://www.vanhollen.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "7",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 2,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:md",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "MD",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S390"
                 ,"missed_votes_pct": 1.21,
                 "votes_with_party_pct": 99.38,
                 "votes_against_party_pct": 0.62
               },
                           {
                 "id": "V000137",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/V000137.json",
                 "first_name": "J.D.",
                 "middle_name": null,
                 "last_name": "Vance",
                 "suffix": null,
                 "date_of_birth": "1984-08-02",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": null,
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456876",
                 "cspan_id": null,
                 "votesmart_id": null,
                 "icpsr_id": null,
                 "crp_id": null,
                 "google_entity_id": null,
                 "fec_candidate_id": "S2OH00436",
                 "url": "https://www.vance.senate.gov/",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:oh",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "OH",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S421"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 89.31,
                 "votes_against_party_pct": 10.69
               },
                           {
                 "id": "W000805",
                 "title": "Senator, 2nd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000805.json",
                 "first_name": "Mark",
                 "middle_name": null,
                 "last_name": "Warner",
                 "suffix": null,
                 "date_of_birth": "1954-12-15",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "MarkWarner",
                 "facebook_account": "MarkRWarner",
                 "youtube_account": "SenatorMarkWarner",
                 "govtrack_id": "412321",
                 "cspan_id": "7630",
                 "votesmart_id": "535",
                 "icpsr_id": "40909",
                 "crp_id": "N00002097",
                 "google_entity_id": "/m/024mm1",
                 "fec_candidate_id": "S6VA00093",
                 "url": "https://www.warner.senate.gov",
                 "rss_url": "https://www.warner.senate.gov/public/?a=RSS.Feed",
                 "contact_form": "https://www.warner.senate.gov/public/index.cfm?p=Contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "15",
                 "next_election": "2026",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:va",
                 "office": "703 Hart Senate Office Building",
                 "phone": "202-224-2023",
                 "fax": null,
                 "state": "VA",
                 "senate_class": "2",
                 "state_rank": "senior",
                 "lis_id": "S327"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 100.00,
                 "votes_against_party_pct": 0.00
               },
                           {
                 "id": "W000790",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000790.json",
                 "first_name": "Raphael",
                 "middle_name": null,
                 "last_name": "Warnock",
                 "suffix": null,
                 "date_of_birth": "1969-07-23",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenatorWarnock",
                 "facebook_account": null,
                 "youtube_account": null,
                 "govtrack_id": "456858",
                 "cspan_id": null,
                 "votesmart_id": "189794",
                 "icpsr_id": null,
                 "crp_id": "N00046489",
                 "google_entity_id": "/g/11b5lw9q73",
                 "fec_candidate_id": "S0GA00559",
                 "url": "https://www.warnock.senate.gov",
                 "rss_url": "https://www.warnock.senate.gov/media/press-releases/feed/",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "3",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 3,
                 "total_present": 1,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:ga",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "GA",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S415"
                 ,"missed_votes_pct": 1.82,
                 "votes_with_party_pct": 99.38,
                 "votes_against_party_pct": 0.62
               },
                           {
                 "id": "W000817",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000817.json",
                 "first_name": "Elizabeth",
                 "middle_name": null,
                 "last_name": "Warren",
                 "suffix": null,
                 "date_of_birth": "1949-06-22",
                 "gender": "F",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenWarren",
                 "facebook_account": "senatorelizabethwarren",
                 "youtube_account": "senelizabethwarren",
                 "govtrack_id": "412542",
                 "cspan_id": "1023023",
                 "votesmart_id": "141272",
                 "icpsr_id": "41301",
                 "crp_id": "N00033492",
                 "google_entity_id": "/m/01qh39",
                 "fec_candidate_id": "S2MA00170",
                 "url": "https://www.warren.senate.gov",
                 "rss_url": "https://www.warren.senate.gov/rss/",
                 "contact_form": "https://www.warren.senate.gov/?p=email_senator",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "11",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:ma",
                 "office": "309 Hart Senate Office Building",
                 "phone": "202-224-4543",
                 "fax": null,
                 "state": "MA",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S366"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.17,
                 "votes_against_party_pct": 1.83
               },
                           {
                 "id": "W000800",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000800.json",
                 "first_name": "Peter",
                 "middle_name": null,
                 "last_name": "Welch",
                 "suffix": null,
                 "date_of_birth": "1947-05-02",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "PeterWelch",
                 "facebook_account": "PeterWelch",
                 "youtube_account": "reppeterwelch",
                 "govtrack_id": "412239",
                 "cspan_id": "1019990",
                 "votesmart_id": "51272",
                 "icpsr_id": "20750",
                 "crp_id": "N00000515",
                 "google_entity_id": "/m/0db4gl",
                 "fec_candidate_id": "H6VT00160",
                 "url": "",
                 "rss_url": "https://welch.house.gov/rss.xml",
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "1",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 0,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:05 -0400",
                 "ocd_id": "ocd-division/country:us/state:vt",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "VT",
                 "senate_class": "3",
                 "state_rank": "junior",
                 "lis_id": "S422"
                 ,"missed_votes_pct": 0.00,
                 "votes_with_party_pct": 98.78,
                 "votes_against_party_pct": 1.22
               },
                           {
                 "id": "W000802",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000802.json",
                 "first_name": "Sheldon",
                 "middle_name": null,
                 "last_name": "Whitehouse",
                 "suffix": null,
                 "date_of_birth": "1955-10-20",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "SenWhitehouse",
                 "facebook_account": "SenatorWhitehouse",
                 "youtube_account": "SenatorWhitehouse",
                 "govtrack_id": "412247",
                 "cspan_id": "92235",
                 "votesmart_id": "2572",
                 "icpsr_id": "40704",
                 "crp_id": "N00027533",
                 "google_entity_id": "/m/07qw94",
                 "fec_candidate_id": "S6RI00221",
                 "url": "https://www.whitehouse.senate.gov",
                 "rss_url": "https://www.whitehouse.senate.gov/rss/feeds/?type=all&cachebuster=1",
                 "contact_form": "https://www.whitehouse.senate.gov/contact/email-sheldon",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 7,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ri",
                 "office": "530 Hart Senate Office Building",
                 "phone": "202-224-2921",
                 "fax": null,
                 "state": "RI",
                 "senate_class": "1",
                 "state_rank": "junior",
                 "lis_id": "S316"
                 ,"missed_votes_pct": 4.24,
                 "votes_with_party_pct": 99.37,
                 "votes_against_party_pct": 0.63
               },
                           {
                 "id": "W000437",
                 "title": "Senator, 1st Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000437.json",
                 "first_name": "Roger",
                 "middle_name": null,
                 "last_name": "Wicker",
                 "suffix": null,
                 "date_of_birth": "1951-07-05",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenatorWicker",
                 "facebook_account": "SenatorWicker",
                 "youtube_account": "SenatorWicker",
                 "govtrack_id": "400432",
                 "cspan_id": "18203",
                 "votesmart_id": "21926",
                 "icpsr_id": "29534",
                 "crp_id": "N00003280",
                 "google_entity_id": "/m/025xxb",
                 "fec_candidate_id": "H4MS01078",
                 "url": "https://www.wicker.senate.gov",
                 "rss_url": "https://www.wicker.senate.gov/public/?a=rss.feed",
                 "contact_form": "https://www.wicker.senate.gov/public/index.cfm/contact",
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "17",
                 "next_election": "2024",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:ms",
                 "office": "555 Dirksen Senate Office Building",
                 "phone": "202-224-6253",
                 "fax": null,
                 "state": "MS",
                 "senate_class": "1",
                 "state_rank": "senior",
                 "lis_id": "S318"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 91.36,
                 "votes_against_party_pct": 8.64
               },
                           {
                 "id": "W000779",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/W000779.json",
                 "first_name": "Ron",
                 "middle_name": null,
                 "last_name": "Wyden",
                 "suffix": null,
                 "date_of_birth": "1949-05-03",
                 "gender": "M",
                 "party": "D",
                 "leadership_role": null,
                 "twitter_account": "RonWyden",
                 "facebook_account": null,
                 "youtube_account": "senronwyden",
                 "govtrack_id": "300100",
                 "cspan_id": "1962",
                 "votesmart_id": "27036",
                 "icpsr_id": "14871",
                 "crp_id": "N00007724",
                 "google_entity_id": "/m/0178p9",
                 "fec_candidate_id": "S6OR00110",
                 "url": "https://www.wyden.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "28",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 1,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:03 -0400",
                 "ocd_id": "ocd-division/country:us/state:or",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "OR",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S247"
                 ,"missed_votes_pct": 0.61,
                 "votes_with_party_pct": 99.39,
                 "votes_against_party_pct": 0.61
               },
                           {
                 "id": "Y000064",
                 "title": "Senator, 3rd Class",
                 "short_title": "Sen.",
                 "api_uri":"https://api.propublica.org/congress/v1/members/Y000064.json",
                 "first_name": "Todd",
                 "middle_name": null,
                 "last_name": "Young",
                 "suffix": null,
                 "date_of_birth": "1972-08-24",
                 "gender": "M",
                 "party": "R",
                 "leadership_role": null,
                 "twitter_account": "SenToddYoung",
                 "facebook_account": "SenatorToddYoung",
                 "youtube_account": "RepToddYoung",
                 "govtrack_id": "412428",
                 "cspan_id": "1033743",
                 "votesmart_id": "120345",
                 "icpsr_id": "21133",
                 "crp_id": "N00030670",
                 "google_entity_id": "/m/0ds030m",
                 "fec_candidate_id": "H0IN09070",
                 "url": "https://www.young.senate.gov",
                 "rss_url": null,
                 "contact_form": null,
                 "in_office": true,
                 "cook_pvi": null,
                 "dw_nominate": null,
                 "ideal_point": null,
                 "seniority": "7",
                 "next_election": "2028",
                 "total_votes": 165,
                 "missed_votes": 4,
                 "total_present": 0,
                 "last_updated": "2023-06-23 16:20:04 -0400",
                 "ocd_id": "ocd-division/country:us/state:in",
                 "office": null,
                 "phone": null,
                 "fax": null,
                 "state": "IN",
                 "senate_class": "3",
                 "state_rank": "senior",
                 "lis_id": "S391"
                 ,"missed_votes_pct": 2.42,
                 "votes_with_party_pct": 73.58,
                 "votes_against_party_pct": 26.42
               }
             ]
      }
   ]
}

  recorded_at: Mon, 10 Jul 2023 01:26:13 GMT
recorded_with: VCR 6.2.0
